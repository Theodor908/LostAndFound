
@model LostAndFound.Models.MemberListDTO
@inject LostAndFound.Interfaces.IUserService UserService
@using System.Security.Claims;
@using LostAndFound.Extensions;
@{

    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["Title"]</h1>

<div class="container mt-5">
    <div class="row mb-3">
        <div class="col-md-6">
            <h2>Users</h2>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-12">
            <form asp-controller="Admin" asp-action="UserList">
                <div class="d-flex align-items-center justify-content-between gap-3">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Search by username or email" value="@Model.SearchTerm" />
                    
                    <select name="sortBy" class="form-select" style="min-width: 120px;">
                        <option value="username" selected="@(Model.SortBy == "name")">Name</option>
                        <option value="email" selected="@(Model.SortBy == "email")">Email</option>
                    </select>
                    
                    <div class="form-check form-switch d-flex align-items-center">
                        <input asp-for="@Model.IsBanned" class="form-check-input" type="checkbox" id="isBanned" name="isBanned" />
                        <label class="form-check-label ms-2" for="isBanned">Show Banned</label>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </div>
    </div>

    <ul class="list-group">
        @foreach (var user in Model.MemberList.Items)
        {
            if(user.Id == User.GetUserId())
            {
                continue;
            }
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <h5>@user.Username</h5>
                    <p>@user.Email</p>
                    @{
                        var roles = await UserService.GetUserRolesByIdAsync(user.Id);
                        foreach (var role in roles)
                        {
                            <span class="badge bg-secondary">@role</span>
                        }

                    }
                    @{
                        if (user.IsBanned)
                        {
                            <span class="badge bg-danger">Banned</span>
                        }
                        else
                        {
                            <span class="badge bg-success">Active</span>
                        }
                    }
                </div>
                <div>
                    
                    @{
                        if(!user.IsBanned)
                        {
                            <a asp-controller="Admin" asp-action="BanUser" asp-route-id="@user.Id" class="btn btn-warning">Ban</a>
                        }
                        else
                        {
                            <a asp-controller="Admin" asp-action="UnbanUser" asp-route-id="@user.Id" class="btn btn-success">Unban</a>
                        }
                    }
                    <a asp-controller="Admin" asp-action="UserDetails" asp-route-id="@user.Id" class="btn btn-success">Details</a>
                    <a asp-controller="Admin" asp-action="UserRoleAssignment" asp-route-id="@user.Id" class="btn btn-info">Roles</a>
                    <a asp-controller="Admin" asp-action="UserDelete" asp-route-id="@user.Id" class="btn btn-danger">Delete</a>
                </div>
            </li>
        }
    </ul>
    <div class="row mt-4">
        <div class="col-12 text-center">
            <p>Total Users: @Model.MemberList.TotalCount</p>
        </div>
    </div>
</div>
@if (Model.MemberList.TotalPages > 1)
    {
        <div class="row mt-4">
            <div class="col-12">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(!Model.MemberList.HasPrevious ? "disabled" : "")">
                            <a class="page-link" 
                               asp-controller="Admin" 
                               asp-action="UserList" 
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-pageNumber="@(Model.MemberList.CurrentPage - 1)">
                                Previous
                            </a>
                        </li>
                        
                        @for (int i = 1; i <= Model.MemberList.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.MemberList.CurrentPage ? "active" : "")">
                                <a class="page-link"
                                    asp-controller="Admin"
                                    asp-action="UserList"
                                    asp-route-searchTerm="@Model.SearchTerm"
                                    asp-route-pageNumber="@i">
                                    @i
                                </a>
                            </li>
                        }
                        <li class="page-item @(!Model.MemberList.HasNext ? "disabled" : "")">
                            <a class="page-link" 
                               asp-controller="Admin" 
                               asp-action="UserList" 
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-pageNumber="@(Model.MemberList?.CurrentPage + 1)">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
    <div class="row mt-4 mb-4">
        <div class="col-12 text-center">
            <a asp-controller="Admin" asp-action="Index" class="btn btn-primary">Back to Dashboard</a>
        </div>
    </div>
