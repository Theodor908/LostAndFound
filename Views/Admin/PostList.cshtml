@model LostAndFound.Models.PostListDTO
@{
    ViewData["Title"] = "Post List";  
    Layout = "~/Views/Shared/_Layout.cshtml";  
}

<div class="container mt-5">
    <h1>@ViewData["Title"]</h1>

    <div class="row mb-3">
        <div class="col-md-6">
            <h2>Posts</h2>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-12">
            <form asp-controller="Admin" asp-action="PostList" method="get">
                <div class="d-flex align-items-center justify-content-between gap-3">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Search by title or description" value="@Model.SearchTerm" />
                    
                    <select name="postType" class="form-select" style="min-width: 120px;">
                        <option value="" selected="@(string.IsNullOrEmpty(Model.PostType))">All Types</option>
                        <option value="Lost" selected="@(Model.PostType == "Lost")">Lost</option>
                        <option value="Found" selected="@(Model.PostType == "Found")">Found</option>
                    </select>

                    <select name="isActive" class="form-select" style="min-width: 120px;">
                        <option value="" selected="@(Model.IsActive == null)">All Status</option>
                        <option value="true" selected="@(Model.IsActive == true)">Active</option>
                        <option value="false" selected="@(Model.IsActive == false)">Inactive</option>
                    </select>

                    <select name="sortBy" class="form-select" style="min-width: 120px;">
                        <option value="title" selected="@(Model.SortBy == "title")">Title</option>
                        <option value="date" selected="@(Model.SortBy == "date")">Date</option>
                    </select>

                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </div>
    </div>

    <ul class="list-group">
        @foreach (var post in Model.PostList.Items)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <h5>@post.Title</h5>
                    <span class="badge @(post.PostType == "Lost" ? "bg-danger" : "bg-success")">
                        @(post.PostType == "Lost" ? "Lost" : "Found")
                    </span>
                    <span class="badge @(post.IsActive ? "bg-success" : "bg-secondary")">
                        @(post.IsActive ? "Active" : "Inactive")
                    </span>
                </div>
                <div>
                    <a asp-controller="Post" asp-action="PostDetails" asp-route-id="@post.Id" class="btn btn-secondary">Details</a>
                    <a asp-controller="Post" asp-action="PostDelete" asp-route-id="@post.Id" class="btn btn-danger">Delete</a>
                </div>
            </li>
        }
    </ul>
    <div class="row mt-4">
        <div class="col-12 text-center">
            <p>Total Posts: @Model.PostList.TotalCount</p>
        </div>
    </div>
</div>
@if (Model.PostList.TotalPages > 1)
    {
        <div class="row mt-4">
            <div class="col-12">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(!Model.PostList.HasPrevious ? "disabled" : "")">
                            <a class="page-link" 
                                asp-controller="Admin" 
                                asp-action="PostList" 
                                asp-route-searchTerm="@Model.SearchTerm"
                                asp-route-postType="@Model.PostType"
                                asp-route-isActive="@Model.IsActive"
                                asp-route-sortBy="@Model.SortBy"
                                asp-route-pageNumber="@(Model.PostList.CurrentPage - 1)">
                                Previous
                            </a>
                        </li>
                        
                        @for (int i = 1; i <= Model.PostList.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PostList.CurrentPage ? "active" : "")">
                                <a class="page-link"
                                    asp-controller="Admin"
                                    asp-action="PostList"
                                    asp-route-searchTerm="@Model.SearchTerm"
                                    asp-route-postType="@Model.PostType"
                                    asp-route-isActive="@Model.IsActive"
                                    asp-route-sortBy="@Model.SortBy"
                                    asp-route-pageNumber="@i">
                                    @i
                                </a>
                            </li>
                        }
                        <li class="page-item @(!Model.PostList.HasNext ? "disabled" : "")">
                            <a class="page-link" 
                                asp-controller="Admin" 
                                asp-action="PostList" 
                                asp-route-searchTerm="@Model.SearchTerm"
                                asp-route-postType="@Model.PostType"
                                asp-route-isActive="@Model.IsActive"
                                asp-route-sortBy="@Model.SortBy"
                                asp-route-pageNumber="@(Model.PostList?.CurrentPage + 1)">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    }
    <div class="row mt-4 mb-4"></div>
        <div class="col-12 text-center">
            <a asp-controller="Admin" asp-action="Index" class="btn btn-primary">Back to Dashboard</a>
        </div>
    </div>
