@model LostAndFound.Models.RegisterDTO

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Register";
}

<div class="container py-4">
    <div class="row g-4">
        <div class="col-12 col-lg-6 order-2 order-lg-1">
            <div class="p-4 bg-light rounded shadow-sm">
                <fieldset>
                    <legend>Register</legend>

                    <form asp-controller="Account" asp-action="Register" method="post">

                        <div class="form-floating mb-3">
                            <input asp-for="Username" class="form-control" placeholder="Enter a username" required>
                            <label asp-for="Username"></label>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="form-floating mb-3">
                            <input asp-for="Email" class="form-control" type="email" placeholder="Enter your email" required>
                            <label asp-for="Email"></label>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Country" class="form-label">Country</label>
                            <select asp-for="Country" id="countrySelect" class="form-select" required>
                                <option value="">Select Country</option>
                            </select>
                            <span asp-validation-for="Country" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="City" class="form-label">City</label>
                            <select asp-for="City" id="citySelect" class="form-select" required disabled>
                                <option value="">Select City</option>
                            </select>
                            <span asp-validation-for="City" class="text-danger"></span>
                        </div>

                        <div class="form-floating mb-3">
                            <input asp-for="Password" class="form-control" type="password" placeholder="Create a password" required>
                            <label asp-for="Password"></label>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        <div class="form-floating mb-3">
                            <input asp-for="ConfirmPassword" class="form-control" type="password" placeholder="Confirm your password" required>
                            <label asp-for="ConfirmPassword"></label>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <div class="form-check">
                                <input asp-for="RememberMe" type="checkbox" class="form-check-input">
                                <label asp-for="RememberMe" class="form-check-label">Remember me</label>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">Register</button>
                    </form>
                </fieldset>
            </div>
        </div>
        <div class="col-12 col-lg-6 order-1 order-lg-2 d-flex align-items-center">
            <div class="text-center text-lg-start p-4">
                <h1 class="display-5 mb-3">Millions of people find their lost items</h1>
                <p class="lead">Join the community now and help each other find what has been lost</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiKey = 'YkV4T2h4dGVWWHY5Z1RWT2hCeUJGZlc4d2VIRFp4TnBpWk5JTTZGaA==';
        
        const countrySelect = document.getElementById('countrySelect');
        const citySelect = document.getElementById('citySelect');
        // Load countries on page load
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                const countries = await fetchCountries();
                populateCountryDropdown(countries);
            } catch (error) {
                console.error('Error loading countries:', error);
            }
        });
        // Load cities when a country is selected
        countrySelect.addEventListener('change', async () => {

            citySelect.innerHTML = '<option value="">Select City</option>';
            citySelect.disabled = true;
            
            const countryIso2 = countrySelect.value;
            if (countryIso2) {
                try {
                    const cities = await fetchCities(countryIso2);
                    populateCityDropdown(cities);
                    citySelect.disabled = false;
                } catch (error) {
                    console.error('Error loading cities:', error);
                }
            }
        });

        // API Functions
        async function fetchCountries() {
            const response = await fetch('https://api.countrystatecity.in/v1/countries', {
                method: 'GET',
                headers: {
                    'X-CSCAPI-KEY': apiKey
                }
            });
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            return await response.json();
        }

        async function fetchCities(countryIso2) {
            const response = await fetch(`https://api.countrystatecity.in/v1/countries/${countryIso2}/cities`, {
                method: 'GET',
                headers: {
                    'X-CSCAPI-KEY': apiKey
                }
            });
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            return await response.json();
        }

        // Populate Dropdown Functions
        function populateCountryDropdown(countries) {
            countrySelect.innerHTML = '<option value="">Select Country</option>';
            
            countries.forEach(country => {
                const option = document.createElement('option');
                option.value = country.iso2;
                option.textContent = country.name;
                countrySelect.appendChild(option);
            });
        }

        function populateCityDropdown(cities) {
            citySelect.innerHTML = '<option value="">Select City</option>';
            
            if (cities.length === 0) {
                const option = document.createElement('option');
                option.value = "none";
                option.textContent = "No cities available";
                citySelect.appendChild(option);
                return;
            }
            
            cities.forEach(city => {
                const option = document.createElement('option');
                option.value = city.name;
                option.textContent = city.name;
                citySelect.appendChild(option);
            });
        }
    </script>
}